{"version":3,"sources":["container/resume/index.js","pages/Projects/index.js","pages/Home.jsx","pages/Contact.jsx","components/HorizontalMenu.js","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Resume","props","src","frameborder","title","className","Projects","style","textAlign","marginTop","Home","Component","Contact","fontWeight","href","HorizontalMenu","menu_options","menu_options_jsx","push","key","exact","isActive","match","location","pathname","activeClassName","to","toLowerCase","index","length","element","path","Header","subtitle","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iRAiBeA,MAff,SAAgBC,GAGd,OACE,4BACEC,IAAK,yHAELC,YAAY,IACZC,MAAM,iBACNC,UAAU,gBCLDC,MAJf,SAAkBL,GAChB,OAAO,yBAAKM,MAAO,CAAEC,UAAW,SAAUC,UAAW,QAA9C,Q,+BCOMC,E,uKANP,OACI,yC,GAHOC,aCgBJC,E,uKAdX,OACE,yBAAKP,UAAU,WACb,yBAAKA,UAAU,oBACb,uBAAGE,MAAO,CAAEM,WAAY,MAAxB,cACA,sDACA,uBAAGC,KAAK,oBAAR,oBAEA,+E,GATYH,aCmEPI,MA/Df,WACE,IAAIC,EAAe,CAAC,WAAY,UAAW,UACvCC,EAAmB,GAKvBA,EAAiBC,KACf,yBAAKb,UAAU,YAAYc,IALf,QAMV,kBAAC,IAAD,CACEC,OAAK,EACLC,SAAU,SAACC,EAAOC,GAChB,MAA6B,MAAtBA,EAASC,UAAoBF,GAEtCjB,UAAU,qBACVoB,gBAAgB,kBAChBC,GAbQ,OAaIC,eAbJ,QAiBV,0BAAMtB,UAAU,aAGpB,IAAK,IAAIuB,EAAQ,EAAGA,EAAQZ,EAAaa,OAAQD,IAAS,CACxD,IAAME,EAAUd,EAAaY,GAC7BX,EAAiBC,KACf,yBAAKb,UAAU,YAAYc,IAAKW,GAC9B,kBAAC,IAAD,CACEV,OAAK,EACLf,UAAU,qBACVoB,gBAAgB,kBAChBC,GAAII,EAAQH,eAEXG,GAEH,0BAAMzB,UAAU,aAKtB,OACE,6BACE,yBAAKA,UAAU,oBAAoBY,GACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UCzCKC,MAlBf,SAAgB/B,GACd,OACE,6BACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,SACb,uBAAGS,KAAK,KAAKb,EAAMG,QAErB,yBAAKC,UAAU,YACb,+BAAKJ,EAAMgC,SAAX,OAGJ,kBAAC,IAAD,KACE,kBAAC,EAAD,SCDOC,MAXf,WACE,OACE,yBAAK7B,UAAU,OACb,kBAAC,EAAD,CACED,MAAM,wBACN6B,SAAS,yCCGGE,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASf,MACvB,2DCZNgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1a12f9fa.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Resume(props) {\n  const src =\n    \"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\";\n  return (\n    <iframe\n      src={\"http://docs.google.com/gview?url=\" + src + \"&embedded=true\"}\n      // style=\"width:100%; height:1000px;\"\n      frameborder=\"0\"\n      title=\"Resume of Seym\"\n      className=\"pdf-viewer\"\n      // onLoad={this.loadListener}\n    ></iframe>\n  );\n}\n\nexport default Resume;\n","import React from \"react\";\n\nfunction Projects(props) {\n  return <div style={{ textAlign: \"center\", marginTop: \"5em\" }}>TBD</div>;\n}\n\nexport default Projects;\n","import React, { Component } from 'react'\n\nclass Home extends Component {\n    render () {\n        return (\n            <div>Home</div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"contact\">\n        <div className=\"center-container\">\n          <p style={{ fontWeight: 500 }}>Contact Me</p>\n          <p>seym45[at]gmail[dot]com</p>\n          <a href=\"https://Seym.dev\">https://Seym.dev</a>\n          {/* <p>Call? Shoot an email instead</p> */}\n          <p>Want a quick response? Skype me @seym45 ! </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { BrowserRouter as Route, Switch, NavLink } from \"react-router-dom\";\nimport Resume from \"../container/resume\";\nimport Projects from \"../pages/Projects\";\nimport Home from \"../pages/Home\";\nimport Contact from \"../pages/Contact\";\nfunction HorizontalMenu() {\n  let menu_options = [\"Projects\", \"Contact\", \"Resume\"];\n  let menu_options_jsx = [];\n  let element = \"Home\";\n\n  // Todo: move the agonstic declration inside loop below\n  // Aim is to highlight the `Home` option from menu for path '/'\n  menu_options_jsx.push(\n    <div className=\"container\" key={element}>\n      <NavLink\n        exact\n        isActive={(match, location) => {\n          return location.pathname === \"/\" || match;\n        }}\n        className=\"emni-class options\"\n        activeClassName=\"active-class-my\"\n        to={element.toLowerCase()}\n      >\n        {element}\n      </NavLink>\n      <span className=\"border\"></span>\n    </div>\n  );\n  for (let index = 0; index < menu_options.length; index++) {\n    const element = menu_options[index];\n    menu_options_jsx.push(\n      <div className=\"container\" key={element}>\n        <NavLink\n          exact\n          className=\"emni-class options\"\n          activeClassName=\"active-class-my\"\n          to={element.toLowerCase()}\n        >\n          {element}\n        </NavLink>\n        <span className=\"border\"></span>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"portfolio-navbar\">{menu_options_jsx}</div>\n      <Switch>\n        <Route path=\"/Home\">\n          <Home />\n        </Route>\n        <Route path=\"/projects\">\n          <Projects />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/resume\">\n          <Resume />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default HorizontalMenu;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HorizontalMenu from \"./HorizontalMenu\";\n\nfunction Header(props) {\n  return (\n    <div>\n      <div className=\"portfolio-header\">\n        <div className=\"title\">\n          <a href=\"/\">{props.title}</a>\n        </div>\n        <div className=\"subtitle\">\n          <p> {props.subtitle} </p>\n        </div>\n      </div>\n      <Router>\n        <HorizontalMenu />\n      </Router>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./styles/style.scss\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header\n        title=\"Hossain Mohammad Seym\"\n        subtitle=\"Software Engineer, Tech Enthusiast\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}